

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu Nov 02 16:48:08 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    10  0000                     
    11                           ; Version 1.43
    12                           ; Generated 25/07/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC18F4520 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     
    46                           ; #config settings
    47  0000                     
    48                           	psect	cinit
    49  007FD0                     __pcinit:
    50                           	opt stack 0
    51  007FD0                     start_initialization:
    52                           	opt stack 0
    53  007FD0                     __initialization:
    54                           	opt stack 0
    55  007FD0                     end_of_initialization:
    56                           	opt stack 0
    57  007FD0                     __end_of__initialization:
    58                           	opt stack 0
    59  007FD0  0100               	movlb	0
    60  007FD2  EFF0  F03F         	goto	_main	;jump to C main() function
    61                           
    62                           	psect	cstackCOMRAM
    63  000001                     __pcstackCOMRAM:
    64                           	opt stack 0
    65  000001                     ?_add:
    66  000001                     _add$0:
    67                           	opt stack 0
    68  000001                     main@sum:
    69                           	opt stack 0
    70                           
    71                           ; 2 bytes @ 0x0
    72  000001                     	ds	2
    73  000003                     _add$1:
    74                           	opt stack 0
    75                           
    76                           ; 2 bytes @ 0x2
    77  000003                     	ds	2
    78                           
    79 ;;
    80 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    81 ;;
    82 ;; *************** function _main *****************
    83 ;; Defined at:
    84 ;;		line 15 in file "newmain.c"
    85 ;; Parameters:    Size  Location     Type
    86 ;;		None
    87 ;; Auto vars:     Size  Location     Type
    88 ;;  sum             2    0[COMRAM] int 
    89 ;; Return value:  Size  Location     Type
    90 ;;                  1    wreg      void 
    91 ;; Registers used:
    92 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, bsr, cstack
    93 ;; Tracked objects:
    94 ;;		On entry : 0/0
    95 ;;		On exit  : 0/0
    96 ;;		Unchanged: 0/0
    97 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    98 ;;      Params:         0       0       0       0       0       0       0
    99 ;;      Locals:         2       0       0       0       0       0       0
   100 ;;      Temps:          0       0       0       0       0       0       0
   101 ;;      Totals:         2       0       0       0       0       0       0
   102 ;;Total ram usage:        2 bytes
   103 ;; Hardware stack levels required when called:    1
   104 ;; This function calls:
   105 ;;		_add
   106 ;; This function is called by:
   107 ;;		Startup code after reset
   108 ;; This function uses a non-reentrant model
   109 ;;
   110                           
   111                           	psect	text0
   112  007FE0                     __ptext0:
   113                           	opt stack 0
   114  007FE0                     _main:
   115                           	opt stack 30
   116                           
   117                           ;newmain.c: 16: int sum=add(0x1234,0x1234);
   118                           
   119                           ;incstack = 0
   120  007FE0  0E12               	movlw	18
   121  007FE2  6E02               	movwf	_add$0+1,c
   122  007FE4  0E34               	movlw	52
   123  007FE6  6E01               	movwf	_add$0,c
   124  007FE8  0E12               	movlw	18
   125  007FEA  6E04               	movwf	_add$1+1,c
   126  007FEC  0E34               	movlw	52
   127  007FEE  6E03               	movwf	_add$1,c
   128  007FF0  ECEB  F03F         	call	_add	;wreg free
   129  007FF4  C001  F001         	movff	?_add,main@sum
   130  007FF8  C002  F002         	movff	?_add+1,main@sum+1
   131                           
   132                           ;newmain.c: 17: return;
   133  007FFC  EF00  F000         	goto	start
   134  008000                     __end_of_main:
   135                           	opt stack 0
   136  0000                     
   137                           	psect	rparam


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2       2
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      25
                                              0 COMRAM     2     2      0
                                _add
 ---------------------------------------------------------------------------------
 (1) _add                                                  4     0      4      24
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _add

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      2       2       1        1.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Nov 02 16:48:08 2017

                    _add 7FD6             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   ?_add 0001                     _main 7FE0                     start 0000  
           ___param_bank 000000                    ??_add 0001                    ?_main 0001  
                  _add$0 0001                    _add$1 0003          __initialization 7FD0  
           __end_of_main 8000                   ??_main 0001            __activetblptr 000000  
             __accesstop 0080  __end_of__initialization 7FD0            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7FD0                  __ramtop 0600                  __ptext0 7FE0  
                main@sum 0001     end_of_initialization 7FD0      start_initialization 7FD0  
       __CFG_OSC$INTIO67 000000                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 0020  
